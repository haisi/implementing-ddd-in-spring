spring:
  application:
    name: implementing-ddd
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
  flyway:
    enabled: true
    locations: classpath:/db/migration
  mvc:
    problemdetails:
      # RFC 7807 Problem Details support
      enabled: true
  messages:
    basename: i18n/messages/messages
  web:
    locale: en_EN
server:
  compression:
    enabled: true

    #logging:
    #  pattern:
    # Take the span id and trace id from the Mapped Diagnostic Context (MDC) and put them into the log message.
#    level: "[${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
management:
  info:
    build:
      enabled: true
    git:
      mode: full
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
          - info
  endpoint:
    info:
      enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        # Enable histogram buckets for Exemplars
        http.server.request: true

ddd:
  s3:
    url: "http://127.0.0.1:9000"
    access-key-id: "minioadmin"
    secret-access-key: "minioadmin"
  email:
    from: "noreply@localhost"

# hmmm, should I really do it like that? No configure by domain. Maybe 'my.statement.httpclient.post....'
#my:
#  http:
#    client:
#      post:
#        base-url: "https://jsonplaceholder.typicode.com"
#        connection-timeout: