version: '3'

networks:
  grafana:
  db:

services:
  postgres:
    container_name: impl-ddd-postgres
    image: 'postgres:16.3'
    networks:
      - db
    environment:
      - 'POSTGRES_DB=impl-ddd'
      - 'POSTGRES_USER=eric'
      - 'POSTGRES_PASSWORD=evans'
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}' ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - '127.0.0.1:5432:5432'

  ################
  ###### S3 ######
  ################
  minio:
    container_name: ddd-s3
    image: 'quay.io/minio/minio'
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - '127.0.0.1:9000:9000'
      - '127.0.0.1:9001:9001'
    command: 'server /data --console-address ":9001"'

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set ddd http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb ddd/ddd-test;âˆ†
      /usr/bin/mc anonymous set public ddd/ddd-test;
      exit 0;
      "
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 10s
      retries: 3

  ################
  ##### MAIL #####
  ################
  mailhog:
    image: mailhog/mailhog:latest
    restart: always
    ports:
      - 1025:1025 # SMTP server
      - 8025:8025 # UI

##################
### Monitoring ###
##################
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    networks:
      - grafana
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"

  loki:
    container_name: loki
    image: grafana/loki
    networks:
      - grafana
    ports:
      - "3100:3100"
    command:
      - -config.file=/etc/loki/local-config.yaml
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    extra_hosts:
      - "host.docker.internal:host-gateway"

  tempo:
    container_name: tempo
    image: grafana/tempo
    networks:
      - grafana
    command:
      - -config.file=/etc/tempo.yaml
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml:ro
      - ./tempo/data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9411:9411"   # zipkin
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    container_name: grafana
    image: grafana/grafana-oss
    networks:
      - grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    extra_hosts:
      - "host.docker.internal:host-gateway"
